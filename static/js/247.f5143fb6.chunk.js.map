{"version":3,"file":"static/js/247.f5143fb6.chunk.js","mappings":"gOAuCA,UAnCa,WACX,OAAsBA,EAAAA,EAAAA,UAAS,IAA/B,eAAMC,EAAN,KAAWC,EAAX,KACOC,GAAMC,EAAAA,EAAAA,MAAND,GAEDE,EAAS,mCAAG,gHAEOC,EAAAA,EAAAA,IAAe,CAAEC,SAASC,EAAAA,GAAAA,OAAmBL,GAAIA,IAFxD,gBAEPF,EAFO,EAEPA,KACPQ,QAAQC,IAAI,OAAOT,GACnBC,EAAQD,GAJM,gDAMdQ,QAAO,OAAC,EAAD,yBAAC,KAAOE,SAND,yDAAH,qDAef,OALAC,EAAAA,EAAAA,YAAU,WACRP,GAED,GAAC,CAACF,KAIC,eAAIU,MAAO,CAACC,QAAQ,OAAOC,IAAI,QAA/B,SACmB,IAAhBd,EAAKe,QACJf,EAAKgB,KAAI,gBAAEC,EAAF,EAAEA,KAAKC,EAAP,EAAOA,aAAahB,EAApB,EAAoBA,GAApB,OACP,2BACE,gBAAMiB,MAAM,OAAOC,IAAG,8CAAyCF,GAAgBG,IAAKJ,KACpF,uBAAIA,MAFGf,EADF,KAUlB,C,sKCnCDoB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHhB,EAAa,CACxBiB,MAAO,qBACPC,OAAQ,eACRC,OAAQ,WACRC,OAAQ,YAGGC,EAAS,mCAAG,kJAAgC,CAAC,EAAjC,IAAQC,MAAAA,OAAR,MAAc,GAAd,MAAiBC,SAAAA,OAAjB,MAA0B,GAA1B,oBAEER,EAAAA,EAAAA,IAAU,UAAGQ,EAAH,KAAiB,IAAIC,gBAAgB,CAClEF,MAAM,GAAD,OAAKA,GACVG,QAAST,KAJQ,cAEfU,EAFe,yBAMdA,EAASC,MANK,gCAQrBC,IAAAA,OAAAA,QAAA,kCAAwB,KAAOzB,SARV,yDAAH,qDAYTL,EAAc,mCAAG,kJAA6B,CAAC,EAA9B,IAAQC,SAAAA,OAAR,MAAiB,GAAjB,MAAoBJ,GAAAA,OAApB,MAAuB,GAAvB,oBAEHoB,EAAAA,EAAAA,IAAU,gBAASpB,GAAT,OAAcI,EAAd,KAA4B,IAAIyB,gBAAgB,CAC7EC,QAAST,KAHa,cAEpBU,EAFoB,yBAKnBA,EAASC,MALU,gCAO1BC,IAAAA,OAAAA,QAAA,kCAAwB,KAAOzB,SAPL,yDAAH,oD","sources":["components/Cast/Cast.jsx","utils/ApiService/ApiService.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieDetail, END_POINTS } from 'utils/ApiService/ApiService';\n\nconst Cast = () => {\n  const[cast,setCast] = useState([]);\n  const {id} = useParams();\n\n  const fetchCast = async() =>{\n    try {\n      const {cast} = await getMovieDetail({ searchBy:END_POINTS.credit, id: id });\n      console.log('Cast',cast);\n      setCast(cast);\n    } catch (error) {\n      console(error?.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchCast();\n    // eslint-disable-next-line\n  },[id])\n  \n  return (\n   \n      <ul style={{display:'flex',gap:'30px'}}>\n        {cast.length !== 0 &&\n          cast.map(({name,profile_path,id}) => (\n            <li key={id}>\n              <img  width='50px' src={`https://image.tmdb.org/t/p/original/${profile_path}`} alt={name} />\n              <p>{name}</p>\n            </li>\n          ))\n        }\n      </ul>\n  \n  );\n};\n\nexport default Cast;","import axios from 'axios';\nimport Notiflix from 'notiflix';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'af1ce8cf17bdf1608b8338f3be4c63e7';\n\nexport const END_POINTS = {\n  trend: 'trending/movie/day',\n  search: 'search/movie',\n  credit: '/credits',\n  review: '/reviews',\n}\n\nexport const getMovies = async ({query='',endpoint=''} = {}) => {\n  try {\n    const response = await axios.get(`${endpoint}?` + new URLSearchParams({\n        query: `${query}`,\n        api_key: API_KEY,\n    }));\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(error?.message);\n  }\n};\n\nexport const getMovieDetail = async ({searchBy='',id=''} = {}) => {\n  try {\n    const response = await axios.get(`movie/${id}${searchBy}?` + new URLSearchParams({\n        api_key: API_KEY,\n    }));\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(error?.message);\n  }\n};\n"],"names":["useState","cast","setCast","id","useParams","fetchCast","getMovieDetail","searchBy","END_POINTS","console","log","message","useEffect","style","display","gap","length","map","name","profile_path","width","src","alt","axios","API_KEY","trend","search","credit","review","getMovies","query","endpoint","URLSearchParams","api_key","response","data","Notiflix"],"sourceRoot":""}