{"version":3,"file":"static/js/672.a2a17a4b.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/LoaderImage/Loader.module.scss?a10f","components/LoaderImage/LoaderImage.jsx","webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.scss?0a3a","components/MovieDetails/MovieDetails.jsx","pages/MovieDetails.jsx","utils/ApiService/ApiService.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__Bs7AJ\",\"rotation\":\"Loader_rotation__Q26v2\",\"loader__container\":\"Loader_loader__container__LV8UC\"};","import css from './Loader.module.scss';\n\nexport const LoaderImage = () =>{\n    return (\n        <div className={css.loader__container}>\n        <span className={css.loader}></span>\n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"movie__detail\":\"MovieDetails_movie__detail__my6Te\",\"movie__detail__btn\":\"MovieDetails_movie__detail__btn__tvDh-\",\"movie__detail__img\":\"MovieDetails_movie__detail__img__PxtxY\"};","import { useEffect, useState, Suspense, useRef } from 'react';\nimport { useParams,useLocation} from 'react-router-dom';\nimport { getMovieDetail} from 'utils/ApiService/ApiService';\nimport css from './MovieDetails.module.scss';\nimport { Link, Outlet } from 'react-router-dom';\nimport { LoaderImage } from 'components/LoaderImage';\n\n\nexport const MovieDetail = () => {\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const { id } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const savedNavigate = useRef(location.state?.from);\n\n  useEffect(() => {\n    setIsLoading(true)\n    const fetchMovie = async () => {\n      try {\n        const data = await getMovieDetail({ id: id });\n        setMovie(data);\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error?.message);\n      }\n    };\n\n    fetchMovie();\n    // eslint-disable-next-line\n  }, [id]);\n\n  \n  // console.log('location',location.state?.from)\n  return (\n    <main>\n      {!movie && !isLoading ? (\n        <div>\n          <p>This movie not found</p>\n        </div>\n      ) : (\n        <div className={css.movie__detail} key={movie?.id}>\n          <Link className={css.movie__detail__btn} to={savedNavigate.current ?? '/'}>Back</Link>\n          <div className={css.movie__detail__img}>\n            <img\n              src={`https://image.tmdb.org/t/p/original/${movie?.poster_path}`}\n              alt={movie?.title}\n              width=\"360\"\n            />\n          </div>\n          <h2>\n            {movie?.title}({movie?.release_date.slice(0,4)})\n          </h2>\n\n          <h3>Overview</h3>\n          <p>{movie?.overview}</p>\n          <h4>Genres</h4>\n          {movie?.genres.map(({ id, name }) => {\n            return <span key={id}>{name}</span>;\n          })}\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n          <Suspense fallback={<LoaderImage/>}>\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n    </main>\n  );\n};\n","import { MovieDetail } from \"components/MovieDetails\";\n\n\nconst MovieDetailPage = () => {\n  \n  return (\n    <main>\n        <MovieDetail/>\n    </main>\n  );\n};\n\nexport default MovieDetailPage;","import axios from 'axios';\nimport Notiflix from 'notiflix';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'af1ce8cf17bdf1608b8338f3be4c63e7';\n\nexport const END_POINTS = {\n  trend: 'trending/movie/day',\n  search: 'search/movie',\n  credit: '/credits',\n  review: '/reviews',\n}\n\nexport const getMovies = async ({query='',endpoint=''} = {}) => {\n  try {\n    const response = await axios.get(`${endpoint}?` + new URLSearchParams({\n        query: `${query}`,\n        api_key: API_KEY,\n    }));\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(error?.message);\n  }\n};\n\nexport const getMovieDetail = async ({searchBy='',id=''} = {}) => {\n  try {\n    const response = await axios.get(`movie/${id}${searchBy}?` + new URLSearchParams({\n        api_key: API_KEY,\n    }));\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(error?.message);\n  }\n};\n"],"names":["LoaderImage","className","css","MovieDetail","useState","movie","setMovie","location","useLocation","id","useParams","isLoading","setIsLoading","savedNavigate","useRef","state","from","useEffect","fetchMovie","getMovieDetail","data","console","log","message","to","current","src","poster_path","alt","title","width","release_date","slice","overview","genres","map","name","Suspense","fallback","axios","API_KEY","END_POINTS","trend","search","credit","review","getMovies","query","endpoint","URLSearchParams","api_key","response","Notiflix","searchBy"],"sourceRoot":""}